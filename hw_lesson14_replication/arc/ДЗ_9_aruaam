Что получилось в итоге:

ВМ1 (10.182.0.4): публикация таблицы test, подписка на публикацию test2 c ВМ2. wal_level = logical
ВМ2 (10.182.0.5): публикация таблицы test2, подписка на публикацию test с ВМ1. wal_level = logical 
ВМ3 (10.182.0.6): подписка на публикацию test с ВМ1, подписка на публикацию test2 с ВМ2. wal_level = replica. Изменения с ВМ1 и ВМ2 попадают в базу ВМ3.
ВМ4 (10.182.0.7): через pg_basebackup c ключом -R и hot_standby = on подписка на ВМ3. Изменения обеих таблиц с ВМ3 попадают в базу ВМ4.

Основной сложностью было правильное воспроизведение требуемого сетапа, чтобы ничего не упустить.

Проблемы, с которыми столкнулся:

1) В pg_hba.conf нужно прописывать подключение не только для типа replication, но и в принципе доступ к базе для пользователя, который будет выполнять репликацию. Иначе ошибка:
ERROR:  could not connect to the publisher: connection to server at "10.182.0.4", port 5432 failed: FATAL:  no pg_hba.conf entry for host "10.182.0.5", user "replication", database "replica", SSL encryption

2) На ВМ3 когда пробовал локально сделать бэкап через pg_basebackup, возникала проблема с правами для папки main, если через sudo её чистить и пересоздавать. В итоге бэкап кластера не запускался: failed because the service did not take the steps required by its unit configuration. Если с бэкапными кластером работать под пользователем postgres, то бэкап запускается корректно.

3) Для логической репликации создавал отдельного пользователя replication. Не сразу заработала репликация поскольку не дал доступ к таблицам (permission denied for table) и нужных прав для этой роли (must be superuser or replication role to start walsender). Диагностировать получилось через представление pg_stat_subscription и по логам постгреса.

